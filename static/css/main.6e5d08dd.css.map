{"version":3,"file":"static/css/main.6e5d08dd.css","mappings":"AAAA,KAME,kCAAmC,CACnC,iCAAkC,CAJlC,mIAEY,CAHZ,QAAS,CADT,eAOF,CAEA,KACE,uEAEF,CC4BA,KAGE,aACA,sBAFA,aADA,WAGA,CAGF,YAOE,qBAhDoB,CAkDpB,sCADA,sBAHA,aAJA,cACA,YAlDgB,CAsDhB,uBAIA,+DAPA,WACA,SAMA,CAEA,mBAQE,qBA7DkB,CAoElB,0CARA,aAzDkB,CAqDlB,eADA,eAEA,aACA,wBAJA,WAcA,CANA,yBAEE,yBADA,aA7DgB,CAmElB,8BACE,+BAGF,0BAIE,8CACA,0CAFA,UAnEY,CAsEZ,uBAEA,iCAEE,oDACA,2BAOR,iBACE,YACA,UAGF,OAIE,wBAvGoB,CAwGpB,YAFA,cAFA,kBACA,YAGA,CAGF,iBACE,wBA3GoB,CA8GtB,cAEE,YADA,UACA,CAGF,MAGE,wBAxG+B,CAyG/B,yBACA,sCAJA,sBAeA,YALA,aAHA,UANA,kBAWA,yBACA,qBACA,gBACA,CACA,cACE,gBAIJ,uCAEE,wBA5IoB,CA+ItB,cACE,wBAhI+B,CAiI/B,oBAnI+B,CAoI/B,WAMA,YALA,gBAEA,yBACA,qBACA,gBACA,CAGF,oCAEE,0CADA,sBACA,CAGF,yBAGE,sCADA,SACA,CAGF,mBACE,wBArJ+B,CAsJ/B,oBArJ+B,CAwJjC,WACE,qBAtJ0B,CAuJ1B,oBAtJ0B,CAyJ5B,mBACE,wBA1J0B,CA2J1B,oBA7J0B,CAgK5B,wBACE,wBA7J0B,CA8J1B,oBA7J0B,CAgK5B,YACE,wBA7J2B,CA8J3B,oBA7J2B,CAgK7B,oBACE,wBAjK2B,CAkK3B,iBApK2B,CAuK7B,yBACE,wBApK2B,CAqK3B,oBApK2B,CAuK7B,UAME,mBAHA,qBAzMoB,CAwMpB,sCADA,sBAMA,eAHA,aACA,sBAEA,CAGF,cAKE,eAEA,sBADA,WACA,CAGF,+BANE,mBAFA,YADA,YAEA,UAeA,CARF,iBAME,wBApN+B,CAmN/B,yBAEA,eACA,wBAGF,uBACE,wBAzN+B,CA0N/B,kBAKF,wBAEE,yBADA,sBA/N+B,CAmOjC,sBACE,qBA/N0B,CAkO5B,4BACE,wBAlO0B,CAqO5B,6BAEE,sBADA,sBArO0B,CAyO5B,uBACE,wBApO2B,CAuO7B,6BACE,qBAGF,8BAEE,sBADA,sBA1O2B,CA8O7B,yCAGE,sBACA,uEACA,CAEA,uBAEA,CAHA,2BACA,CAFA,uBACA,CALA,gBACA,eAOA,kCAGF,sDAIE","sources":["index.css","Sass/App.scss"],"sourcesContent":["body {\n  overflow: hidden; /*Je ne comprends pas pourquoi mettre overflow:hidden dans le s√©lecteur de la classe App n'a pas suffi.*/\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","$app-header-size: 100px;\n\n$board-color-lighter: #6f8090; // lightness 50 %\n$board-color-light:   #596673; // lightness 40 %\n$board-color:         #384048; // lightness 25 %\n$board-color-dark:    #21262b; // lightness 15 %\n\n$menu-color:          #fffafa; // snow\n$menu-color-dark:     #e6dcdc; // gainsboro + 10R\n$menu-color-darker:   #b8a9a9; // darkgray + 15R\n$menu-color-darkest:  #7a6666; // darkgray + 15R\n//$menu-color:        #f5f5f5; // lightness 96 % (whitesmoke)\n//$menu-color-dark:   #dcdcdc; // lightness 86 % (gainsboro)\n//$menu-color-darker: #a9a9a9; // lightness 66 % (darkgray)\n\n$text-color:      #3a1313;\n$text-color-dark: #330000;\n\n$uncertain-color-lighter:        #d4f7f7; // lightness 90 %\n$uncertain-color-light:          #afeeee; // lightness 81 % (paleturquoise)\n$uncertain-color:                #57dbdb; // lightness 60 %\n$uncertain-color-dark:           #28bdbd; // lightness 45 %\n$uncertain-color-darker-greyed:  #334d4d; // lightness 25 %, saturation 20 %\n$uncertain-color-darkest-greyed: #29383d; // lightness 20 %, saturation 20 %\n\n$true-color-lighter:        #e6ffcc; // 90 %\n$true-color-light:          #ccff99; // 80 %\n$true-color:                #8cff1a; // 55 %\n$true-color-dark:           #66cc00; // 40 %\n$true-color-darker-greyed:  #40532d; // 25 %, 30 %\n$true-color-darkest-greyed: #334224; // 20 %, 30 %\n// lightness 50 % : chartreuse\n\n$false-color-lighter:        #ffcccc; // 90 %\n$false-color-light:          #ff8080; // 80 %\n$false-color:                #ff5c5c; // 68 %\n$false-color-dark:           #cc0000; // 40 %\n$false-color-darker-greyed:  #532d2d; // 25 %, 30 %\n$false-color-darkest-greyed: #422424; // 20 %, 30 %\n// lightness 50 % : red\n\n.App {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.App-header {\n  flex-shrink: 0;\n  height: $app-header-size;\n  width: 100%;\n  z-index: 1;\n  display: flex;\n  justify-content: center;\n  background-color: $menu-color;\n  box-sizing: border-box;\n  box-shadow: 4px 4px 4px rgba(0,0,0,.5);\n  user-select: none;\n  \n  button {\n    width: $app-header-size;\n    font-size: 15px;\n    cursor: pointer;\n    outline: none; // avoid outline on :focus-visible state\n    transition-duration: 0.7s;\n\n    color: $menu-color-darkest;\n    background-color: $menu-color;\n    &:hover {\n      color: $text-color;\n      background-color: $menu-color-darker;\n    }\n\n    border: none;\n    border-left: 2px solid $menu-color-darker;\n    &:last-child {\n      border-right: 2px solid $menu-color-darker;\n    }\n\n    &:active {\n      // I want an instant transition in both ways, but \"transition-duration: 0s\" only works from\n      // :hover to :active and not the other way around. Using an image allows to ignore this property.\n      color: $text-color-dark;\n      background-image: linear-gradient($menu-color-darkest 0 0);\n      border-image:     linear-gradient($menu-color-darkest 0 0);\n      transition-duration: 0s; // for text color (unnoticeable)\n\n      & + button {\n        // The left border of the button on the right must also change.\n        border-image: linear-gradient(90deg, $menu-color-darkest 0%, $menu-color-darker 100%);\n        border-image-slice: 0 1 0 1;\n        // The gradient is used for the last button which must keep its right border unchanged.\n      }\n    }\n  }\n}\n\n.Board-container {\n  height: 100%;\n  z-index: 0;\n}\n\n.Board {\n  position: relative;\n  width: 3840px;\n  height: 2160px;\n  background-color: $board-color;\n  cursor: move;\n}\n\n.Board.ArrowMode {\n  background-color: $board-color-dark;\n}\n\n.Board canvas {\n  width: 100%;\n  height: 100%;\n}\n\n.Tile {\n  box-sizing: border-box;\n  padding: 20px 15px;\n  background-color: $uncertain-color-light;\n  border: 3px solid $uncertain-color;\n  box-shadow: 4px 4px 4px rgba(0,0,0,.5);\n  /*box-shadow: 4px 4px 4px #1C2024;\n  /*box-shadow: 4px 4px 2px #2A3036;*/\n  outline: 0px; /* disable textarea blue border on focus */\n    /* Notes: Even with a width different than 0, outline-style is still set to none by default */\n    /*        I could delete this line now that I have a .Tile:focus selector */\n  font: inherit; /* textarea has default font properties */\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: grab;\n  &.Dragged {\n    cursor: grabbing;\n  }\n}\n\n.Tile::selection, .Tile::-moz-selection {\n  // for selected text\n  background-color: $board-color;\n}\n\n.Tile.Edition {\n  background-color: $uncertain-color;\n  border-color: $uncertain-color-lighter;\n  color: white;\n  font-weight: bold;\n  -moz-user-select: auto;\n  -webkit-user-select: auto;\n  -ms-user-select: auto;\n  user-select: auto;\n  cursor: text;\n}\n\n.Tile.Edition, .Tile.ArrowMode:hover {\n  outline: 1px inset white;\n  box-shadow: 4px 4px 4px rgba(255,255,255,.5);\n}\n\n.Tile.Unselectable:hover {\n  // without :hover, priority is giver to the ArrowMode:hover above\n  outline: 0px;\n  box-shadow: 4px 4px 4px rgba(0,0,0,.5);\n}\n\n.Tile.Unselectable {\n  background-color: $uncertain-color-darker-greyed;\n  border-color: $uncertain-color-darkest-greyed;\n}\n\n.Tile.True {\n  background-color: $true-color-light;\n  border-color: $true-color;\n}\n\n.Tile.True.Edition {\n  background-color: $true-color;\n  border-color: $true-color-lighter;\n}\n\n.Tile.True.Unselectable {\n  background-color: $true-color-darker-greyed;\n  border-color: $true-color-darkest-greyed;\n}\n\n.Tile.False {\n  background-color: $false-color-light;\n  border-color: $false-color;\n}\n\n.Tile.False.Edition {\n  background-color: $false-color;\n  border-color: $false-color-lighter;\n}\n\n.Tile.False.Unselectable {\n  background-color: $false-color-darker-greyed;\n  border-color: $false-color-darkest-greyed;\n}\n\n.TileMenu {\n  box-sizing: border-box;\n  box-shadow: 4px 4px 4px rgba(0,0,0,.5);\n  background-color: $menu-color;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: default;\n}\n\n.TileMenu img {\n  margin: auto;\n  height: 35px;\n  width: 35px;\n  border-radius: 35px;\n  border-width: 0px;\n  padding: 5px;\n  box-sizing: border-box;\n}\n\n.TileMenu button {\n  margin: auto;\n  height: 35px;\n  width: 35px;\n  border-radius: 35px;\n  border: 1px solid $board-color;\n  background-color: $uncertain-color-light;\n  cursor: pointer;\n  transition-duration: 0.7s;\n}\n\n.TileMenu button:hover {\n  background-color: $uncertain-color;\n  border-color: black;\n  /* Strangely, this property affects the classified buttons below,\n   * but this behavior didn't occur with :active. */\n}\n\n.TileMenu button:active {\n  transition-duration: 0s;\n  background-color: $uncertain-color-dark;\n}\n\n.TileMenu button.True {\n  background-color: $true-color-light;\n}\n\n.TileMenu button.True:hover {\n  background-color: $true-color;\n}\n\n.TileMenu button.True:active {\n  transition-duration: 0s;\n  background-color: $true-color-dark;\n}\n\n.TileMenu button.False {\n  background-color: $false-color-light;\n}\n\n.TileMenu button.False:hover {\n  background-color: red;\n}\n\n.TileMenu button.False:active {\n  transition-duration: 0s;\n  background-color: $false-color-dark;\n}\n\n.TileMenu button.Delete, .DeleteArrow div {\n  border-radius: 0;\n  border-width: 0;\n  background-color: white;\n  background-image: url(\"trash.svg\");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition-duration: 0.7s;\n}\n\n.TileMenu button.Delete:hover, .DeleteArrow:hover div {\n/* I want the trash icon to become opaque when the mouse is over\n * the largest button that contains it,\n * hence the div inside the DeleteArrow-class button. */\n  opacity: 1;\n}\n\n:export {\n  appHeaderSize: $app-header-size;\n} // TODO configure webpack to use this\n"],"names":[],"sourceRoot":""}