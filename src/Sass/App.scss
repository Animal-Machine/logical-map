$app-header-size: 100px;

$board-color-lighter: #6f8090; // lightness 50 %
$board-color-light:   #596673; // lightness 40 %
$board-color:         #384048; // lightness 25 %
$board-color-dark:    #21262b; // lightness 15 %

$menu-color:          #fffafa; // snow
$menu-color-dark:     #e6dcdc; // gainsboro + 10R
$menu-color-darker:   #b8a9a9; // darkgray + 15R
$menu-color-darkest:  #7a6666; // darkgray + 15R
//$menu-color:        #f5f5f5; // lightness 96 % (whitesmoke)
//$menu-color-dark:   #dcdcdc; // lightness 86 % (gainsboro)
//$menu-color-darker: #a9a9a9; // lightness 66 % (darkgray)

$text-color:      #3a1313;
$text-color-dark: #330000;

$uncertain-color-lighter:        #d4f7f7; // lightness 90 %
$uncertain-color-light:          #afeeee; // lightness 81 % (paleturquoise)
$uncertain-color:                #57dbdb; // lightness 60 %
$uncertain-color-dark:           #28bdbd; // lightness 45 %
$uncertain-color-darker-greyed:  #334d4d; // lightness 25 %, saturation 20 %
$uncertain-color-darkest-greyed: #29383d; // lightness 20 %, saturation 20 %

$true-color-lighter:        #e6ffcc; // 90 %
$true-color-light:          #ccff99; // 80 %
$true-color:                #8cff1a; // 55 %
$true-color-dark:           #66cc00; // 40 %
$true-color-darker-greyed:  #40532d; // 25 %, 30 %
$true-color-darkest-greyed: #334224; // 20 %, 30 %
// lightness 50 % : chartreuse

$false-color-lighter:        #ffcccc; // 90 %
$false-color-light:          #ff8080; // 80 %
$false-color:                #ff5c5c; // 68 %
$false-color-dark:           #cc0000; // 40 %
$false-color-darker-greyed:  #532d2d; // 25 %, 30 %
$false-color-darkest-greyed: #422424; // 20 %, 30 %
// lightness 50 % : red

.App {
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
}

.App-header {
  flex-shrink: 0;
  height: $app-header-size;
  width: 100%;
  z-index: 1;
  display: flex;
  justify-content: center;
  background-color: $menu-color;
  box-sizing: border-box;
  box-shadow: 4px 4px 4px rgba(0,0,0,.5);
  user-select: none;
  
  button {
    width: $app-header-size;
    font-size: 15px;
    cursor: pointer;
    outline: none; // avoid outline on :focus-visible state
    transition-duration: 0.7s;

    color: $menu-color-darkest;
    background-color: $menu-color;
    &:hover {
      color: $text-color;
      background-color: $menu-color-darker;
    }

    border: none;
    border-left: 2px solid $menu-color-darker;
    &:last-child {
      border-right: 2px solid $menu-color-darker;
    }

    &:active {
      // I want an instant transition in both ways, but "transition-duration: 0s" only works from
      // :hover to :active and not the other way around. Using an image allows to ignore this property.
      color: $text-color-dark;
      background-image: linear-gradient($menu-color-darkest 0 0);
      border-image:     linear-gradient($menu-color-darkest 0 0);
      transition-duration: 0s; // for text color (unnoticeable)

      & + button {
        // The left border of the button on the right must also change.
        border-image: linear-gradient(90deg, $menu-color-darkest 0%, $menu-color-darker 100%);
        border-image-slice: 0 1 0 1;
        // The gradient is used for the last button which must keep its right border unchanged.
      }
    }
  }
}

.Board-container {
  height: 100%;
  z-index: 0;
}

.Board {
  position: relative;
  width: 3840px;
  height: 2160px;
  background-color: $board-color;
  cursor: move;
}

.Board.ArrowMode {
  background-color: $board-color-dark;
}

.Board canvas {
  width: 100%;
  height: 100%;
}

.Tile {
  box-sizing: border-box;
  padding: 20px 15px;
  background-color: $uncertain-color-light;
  border: 3px solid $uncertain-color;
  box-shadow: 4px 4px 4px rgba(0,0,0,.5);
  /*box-shadow: 4px 4px 4px #1C2024;
  /*box-shadow: 4px 4px 2px #2A3036;*/
  outline: 0px; /* disable textarea blue border on focus */
    /* Notes: Even with a width different than 0, outline-style is still set to none by default */
    /*        I could delete this line now that I have a .Tile:focus selector */
  font: inherit; /* textarea has default font properties */
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: default;
}

.Tile::selection, .Tile::-moz-selection {
  // for selected text
  background-color: $board-color;
}

.Tile.Edition {
  background-color: $uncertain-color;
  border-color: $uncertain-color-lighter;
  color: white;
  font-weight: bold;
  -moz-user-select: auto;
  -webkit-user-select: auto;
  -ms-user-select: auto;
  user-select: auto;
  cursor: text;
}

.Tile.Edition, .Tile.ArrowMode:hover {
  outline: 1px inset white;
  box-shadow: 4px 4px 4px rgba(255,255,255,.5);
}

.Tile.Unselectable:hover {
  // without :hover, priority is giver to the ArrowMode:hover above
  outline: 0px;
  box-shadow: 4px 4px 4px rgba(0,0,0,.5);
}

.Tile.Unselectable {
  background-color: $uncertain-color-darker-greyed;
  border-color: $uncertain-color-darkest-greyed;
}

.Tile.True {
  background-color: $true-color-light;
  border-color: $true-color;
}

.Tile.True.Edition {
  background-color: $true-color;
  border-color: $true-color-lighter;
}

.Tile.True.Unselectable {
  background-color: $true-color-darker-greyed;
  border-color: $true-color-darkest-greyed;
}

.Tile.False {
  background-color: $false-color-light;
  border-color: $false-color;
}

.Tile.False.Edition {
  background-color: $false-color;
  border-color: $false-color-lighter;
}

.Tile.False.Unselectable {
  background-color: $false-color-darker-greyed;
  border-color: $false-color-darkest-greyed;
}

.TileMenu {
  box-sizing: border-box;
  box-shadow: 4px 4px 4px rgba(0,0,0,.5);
  background-color: $menu-color;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: default;
}

.TileMenu img {
  margin: auto;
  height: 35px;
  width: 35px;
  border-radius: 35px;
  border-width: 0px;
  padding: 5px;
  box-sizing: border-box;
}

.TileMenu button {
  margin: auto;
  height: 35px;
  width: 35px;
  border-radius: 35px;
  border: 1px solid $board-color;
  background-color: $uncertain-color-light;
  cursor: pointer;
  transition-duration: 0.7s;
}

.TileMenu button:hover {
  background-color: $uncertain-color;
  border-color: black;
  /* Strangely, this property affects the classified buttons below,
   * but this behavior didn't occur with :active. */
}

.TileMenu button:active {
  transition-duration: 0s;
  background-color: $uncertain-color-dark;
}

.TileMenu button.True {
  background-color: $true-color-light;
}

.TileMenu button.True:hover {
  background-color: $true-color;
}

.TileMenu button.True:active {
  transition-duration: 0s;
  background-color: $true-color-dark;
}

.TileMenu button.False {
  background-color: $false-color-light;
}

.TileMenu button.False:hover {
  background-color: red;
}

.TileMenu button.False:active {
  transition-duration: 0s;
  background-color: $false-color-dark;
}

.TileMenu button.Delete, .DeleteArrow div {
  border-radius: 0;
  border-width: 0;
  background-color: white;
  background-image: url("trash.svg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  opacity: 0.6;
  transition-duration: 0.7s;
}

.TileMenu button.Delete:hover, .DeleteArrow:hover div {
/* I want the trash icon to become opaque when the mouse is over
 * the largest button that contains it,
 * hence the div inside the DeleteArrow-class button. */
  opacity: 1;
}

:export {
  appHeaderSize: $app-header-size;
} // TODO configure webpack to use this
